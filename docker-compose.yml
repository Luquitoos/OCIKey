version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: ocikey_postgres
    environment:
      POSTGRES_DB: ocikey_db
      POSTGRES_USER: OCI_user
      POSTGRES_PASSWORD: petoci
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ocikey_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U OCI_user -d ocikey_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build: ./backend
    container_name: ocikey_backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DB_HOST=turntable.proxy.rlwy.net
      - DB_PORT=24899
      - DB_NAME=railway
      - DB_USER=postgres
      - DB_PASSWORD=CXfxBDYwgCblBScYNBRUcaZzUIhYughi
      - JWT_SECRET=f054e756-2fe3-4b44-bf90-bcbd41771778
      - JWT_EXPIRES_IN=7d
      - LD_LIBRARY_PATH=/app/biblioteca
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ocikey_network
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  ocikey_network:
    driver: bridge
